#!/usr/bin/env python3
# Copyright (c) 2017 Wladimir J. van der Laan
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

import sys
import pprint

def byte_to_bin(x,r):
    if r:
        rn = range(7,-1,-1)
    else:
        rn = range(8)
    return bytes(int(bool(x&(1<<i))) for i in rn)

f = open(sys.argv[1], 'rb')
f.seek(0x6600)
data = f.read(1024)
f.close()

# make image
length = 0x3b0
width = 59*2
reverse = True

image = []
ptr = 0
while ptr < length:
    image.append(b''.join(byte_to_bin(x, reverse) for x in data[ptr:ptr+width]))
    ptr += width

# cut up image to font
font = []
for ch in range(0,128):
    glyph = []
    for y in range(8):
        glyph.append(image[y][ch*6:ch*6+6])
    font.append(glyph)

# save font to disk
with open('sundog_font.py', 'w') as f:
    f.write('# This file is automatically generated by extract_gfx.py\n')
    f.write('font = ')
    pprint.pprint(font, f)

# show silly in console
blk = ' â–ˆ'
for ch in range(0,128):
    print('0x%08x (%i)' % (ch,ch))
    for y in range(8):
        print(''.join(blk[i] for i in font[ch][y]))

assert(ptr == length)
print()
